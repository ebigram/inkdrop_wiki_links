{"version":3,"sources":["../src/wiki_link_plugin.js"],"names":["LINK_REGEX","locator","value","fromIndex","indexOf","wikiLinkPlugin","opts","permalinks","defaultPageResolver","name","replace","toLowerCase","pageResolver","newClassName","wikiLinkClassName","defaultHrefTemplate","permalink","hrefTemplate","aliasDivider","isAlias","pageTitle","parseAliasLink","displayName","split","parsePageTitle","inlineTokenizer","eat","match","exec","pageName","trim","pagePermalinks","find","p","exists","undefined","classNames","type","data","alias","hName","hProperties","className","onclick","hChildren","Parser","inlineTokenizers","prototype","inlineMethods","wikiLink","splice","Compiler","visitors","node","module","exports"],"mappings":"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","sourcesContent":["// Modified version of:\n// https://github.com/landakram/remark-wiki-link/blob/v0.0.4/src/index.js\n//\n// Replaces:\n// \"remark-wiki-link\": \"0.x.x\",\n\nimport map from \"unist-util-map\";\n\nconst LINK_REGEX = /^\\[\\[(.+?)\\]\\]/;\n\nfunction locator(value, fromIndex) {\n    return value.indexOf(\"[\", fromIndex);\n}\n\nfunction wikiLinkPlugin(opts = {}) {\n    let permalinks = opts.permalinks || [];\n    let defaultPageResolver = (name) => [name.replace(/ /g, \"_\").toLowerCase()];\n    let pageResolver = opts.pageResolver || defaultPageResolver;\n    let newClassName = opts.newClassName || \"new\";\n    // let wikiLinkClassName = opts.wikiLinkClassName || \"internal wiki_link\";\n    let wikiLinkClassName = opts.wikiLinkClassName || \"wiki_link\";\n    // let defaultHrefTemplate = (permalink) => `#/page/${permalink}`;\n    // let defaultHrefTemplate = (permalink) => `command://core:find/${permalink}`;\n    let defaultHrefTemplate = (permalink) => ``;\n    let hrefTemplate = opts.hrefTemplate || defaultHrefTemplate;\n    let aliasDivider = opts.aliasDivider || \":\";\n\n    function isAlias(pageTitle) {\n        return pageTitle.indexOf(aliasDivider) !== -1;\n    }\n\n    function parseAliasLink(pageTitle) {\n        var [name, displayName] = pageTitle.split(aliasDivider);\n        return { name, displayName };\n    }\n\n    function parsePageTitle(pageTitle) {\n        if (isAlias(pageTitle)) {\n            return parseAliasLink(pageTitle);\n        }\n        return {\n            name: pageTitle,\n            displayName: pageTitle,\n        };\n    }\n\n    function inlineTokenizer(eat, value) {\n        let match = LINK_REGEX.exec(value);\n\n        if (match) {\n            const pageName = match[1].trim();\n            const { name, displayName } = parsePageTitle(pageName);\n\n            let pagePermalinks = pageResolver(name);\n            let permalink = pagePermalinks.find(\n                (p) => permalinks.indexOf(p) != -1\n            );\n            let exists = permalink != undefined;\n\n            if (!exists) {\n                permalink = pagePermalinks[0];\n            }\n\n            let classNames = wikiLinkClassName;\n            if (!exists) {\n                classNames += \" \" + newClassName;\n            }\n\n            return eat(match[0])({\n                type: \"wikiLink\",\n                value: name,\n                data: {\n                    alias: displayName,\n                    permalink: permalink,\n                    exists: exists,\n                    hName: \"a\",\n                    hProperties: {\n                        className: classNames,\n                        // href: hrefTemplate(permalink),\n                        onclick: `() =>\n                            inkdrop.commands.dispatch(\n                                document.body,\n                                \"core:find\"\n                                // {\n                                //     title: displayName,\n                                // }\n                            )`,\n                    },\n                    hChildren: [\n                        {\n                            type: \"text\",\n                            value: displayName,\n                        },\n                    ],\n                },\n            });\n        }\n    }\n\n    inlineTokenizer.locator = locator;\n\n    const Parser = this.Parser;\n\n    const inlineTokenizers = Parser.prototype.inlineTokenizers;\n    const inlineMethods = Parser.prototype.inlineMethods;\n    inlineTokenizers.wikiLink = inlineTokenizer;\n    inlineMethods.splice(inlineMethods.indexOf(\"link\"), 0, \"wikiLink\");\n\n    // Stringify for wiki link\n    const Compiler = this.Compiler;\n\n    if (Compiler != null) {\n        const visitors = Compiler.prototype.visitors;\n        if (visitors) {\n            visitors.wikiLink = function (node) {\n                // debugger;\n                if (node.data.alias != node.value) {\n                    return `[[${node.value}${aliasDivider}${node.data.alias}]]`;\n                }\n                return `[[${node.value}]]`;\n            };\n        }\n    }\n}\n\nmodule.exports = wikiLinkPlugin;\n"],"file":"wiki_link_plugin.js"}